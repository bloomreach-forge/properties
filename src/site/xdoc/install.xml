<?xml version="1.0"?>
<!--
  Copyright 2010-2013 Hippo B.V. (http://www.onehippo.com)

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
  <properties>
    <title>How to install properties component</title>
    <subtitle>Document on how to install the properties component</subtitle>
  </properties>
  <body>
    <section name="How to install the properties component">
      <subsection name="Prerequisites">
        <p>
          These instruction assumes that you have an HST project based on the HST archetype, i.e.
          a Maven multi project consisting of at least three submodules: cms, site and content.
        </p>
      </subsection>
      <subsection name="Maven 2 repository">
        <p>Add this repository to your root pom.xml (if it has not already been defined in a parent pom):</p>
        <source><![CDATA[
<repository>
  <id>hippo-forge</id>
  <name>Hippo Forge maven 2 repository.</name>
  <url>http://maven.onehippo.com/maven2-forge/</url>
  <snapshots>
    <enabled>false</enabled>
  </snapshots>
  <releases>
    <updatePolicy>never</updatePolicy>
  </releases>
  <layout>default</layout>
</repository>]]></source>
      </subsection>

      <subsection name="Installation in CMS/Repository">
        <ol>
          <li>
            <p>Add this dependency to the pom.xml of your <i>cms</i> module:</p>
            <source><![CDATA[
<dependency>
  <groupId>org.onehippo.forge.properties</groupId>
  <artifactId>properties-addon-repository</artifactId>
  <!-- NB version is managed from parent org.onehippo.cms7:hippo-cms7-release
          and can be overridden in the project root pom with <forge.properties.version> -->
</dependency>]]></source>
            <p>Note: when using version <b>2.04.00</b> or lower, the groupId is <code>org.onehippo.forge</code>.</p>
          </li>
          <li>
            <p>
              Rebuild your project. After startup, you should have the availability
              of a Properties document type.
            </p>
          </li>
        </ol>
      </subsection>
      <subsection name="Installation in HST site">
        <ol>
          <li>
            <p>Add this dependency to the pom.xml of your <i>site</i> module:</p>
            <source><![CDATA[
<dependency>
  <groupId>org.onehippo.forge.properties</groupId>
  <artifactId>properties-hst-client</artifactId>
  <!-- NB version is managed from parent org.onehippo.cms7:hippo-cms7-release
          and can be overridden in the project root pom with <forge.properties.version> -->
</dependency>]]></source>
            <p>Note: when using version <b>2.04.00</b> or lower, the groupId is <code>org.onehippo.forge</code>.</p>
          </li>
          <li>
            <p>In the web.xml, make sure HstFilter has uncommented init-params
              clientComponentManagerClass and clientComponentManagerConfigurations.<br/>
              See also <a href="http://www.onehippo.org/7_8/library/concepts/component-development/using-the-spring-clientcomponent.html">Using the Spring ClientComponent</a>.
            </p>
          </li>
          <li>
            <p>The properties component contains a manager object that provides an API by
              which to retrieve properties documents from repository. To create such a manager, add a file to the Spring
              configuration, say <code>site/src/main/resources/META-INF/client-assembly/propertiesManager.xml</code>
              (similar to the example base.xml). Set up Spring beans similar to this (default location and document name
              may be project specific):</p>
            <source><![CDATA[
  <!-- create caching properties manager, for labels in this case, works in combination with PropertiesEventListener below -->
  <bean id="org.onehippo.forge.properties.api.PropertiesManager.labels"
        class="org.onehippo.forge.properties.impl.CachingPropertiesManagerImpl">
    <property name="defaultDocumentLocation" value="labels"/>
    <property name="defaultDocumentName" value="common"/>
  </bean>

  <!-- reference to containerComponentManager -->
  <bean id="containerComponentManager" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.hippoecm.hst.site.HstServices" />
    <property name="targetMethod" value="getComponentManager" />
  </bean>

  <!-- reference to repository -->
  <bean id="javax.jcr.Repository" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="containerComponentManager" />
    <property name="targetMethod" value="getComponent" />
    <property name="arguments">
      <list>
        <value>javax.jcr.Repository</value>
      </list>
    </property>
  </bean>

  <!-- reference to HST configuration reader credentials -->
  <bean id="javax.jcr.Credentials.hstconfigreader" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="containerComponentManager" />
    <property name="targetMethod" value="getComponent" />
    <property name="arguments">
      <list>
        <value>javax.jcr.Credentials.hstconfigreader</value>
      </list>
    </property>
  </bean>

  <!--
    Set up a PropertiesEventListener listening for changes on properties:properties documents to invalidate caching.
    Uses the above references of containerComponentManager, repository and credentials beans.
  -->
  <bean id="org.hippoecm.hst.core.jcr.EventListenersContainer" class="org.hippoecm.hst.core.jcr.EventListenersContainerImpl"
    init-method="start" destroy-method="stop">
    <property name="repository" ref="javax.jcr.Repository" />
    <property name="sessionLiveCheck" value="true" />
    <property name="credentials" ref="javax.jcr.Credentials.hstconfigreader" />
    <property name="sessionLiveCheckInterval" value="60000" />
    <property name="eventListenerItems">
      <list>
        <bean class="org.hippoecm.hst.core.jcr.EventListenerItemImpl">
          <property name="nodeAddedEnabled" value="false" />
          <property name="nodeRemovedEnabled" value="false" />
          <property name="propertyAddedEnabled" value="false" />
          <property name="propertyChangedEnabled" value="true" />
          <property name="propertyRemovedEnabled" value="false" />
          <property name="absolutePath" value="/" />
          <property name="deep" value="true" />
          <property name="uuids">
            <null />
          </property>
          <property name="nodeTypeNames" value="properties:properties" />
          <property name="noLocal" value="false" />
          <property name="eventListener">
            <bean class="org.onehippo.forge.properties.listener.PropertiesEventListener">
              <property name="propertiesManager" ref="org.onehippo.forge.properties.api.PropertiesManager.labels" />
            </bean>
          </property>
        </bean>
      </list>
    </property>
  </bean>
</beans>
]]></source>
            <p>NB: You can also provide your own custom manager.
              Above configuration will by default search for properties documents in the [site-root]/labels folder by
              the name of common, but the API provides ways to do more. See the PropertiesManager.java interface.</p>
          </li>
          <li>
            <p><b>A)</b> If you use classpath loaded beans (available since HST 2.20), add in the web.xml of your site the
                following value to context parameter <code>hst-beans-annotated-classes</code> (note that the values are
            comma separated):</p>
            <source><![CDATA[
<context-param>
  <param-name>hst-beans-annotated-classes</param-name>
  <param-value>
    classpath*:org/onehippo/forge/properties/annotated/**/*.class
  </param-value>
</context-param>]]></source>
            <p><b>B)</b> If you use the xml file to define your beans, add these beans in the HST file site/src/main/webapp/WEB-INF/beans-annotated-classes.xml</p>
            <source><![CDATA[
<hst-content-beans>
  <annotated-class>
    org.onehippo.forge.properties.annotated.Property
  </annotated-class>
  <annotated-class>
    org.onehippo.forge.properties.annotated.Properties
  </annotated-class>
</hst-content-beans>]]></source>
          </li>
        </ol>
        <p>For usage in <a href="sitecode.html">Java/JSP code, see here</a></p>
      </subsection>
    </section>
  </body>
</document>
